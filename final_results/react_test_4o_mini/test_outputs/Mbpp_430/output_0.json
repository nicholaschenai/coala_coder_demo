{
    "env_feedback": "Note: Tests are automatically generated and can be wrong.\n\nTests passed:\nNone\n\nTests failed:\nassert parabola_directrix(5,3,2)==-198 # output: 1",
    "code": "\ndef calculate_discriminant(a, b, c):\n    # Calculate the discriminant of the parabola\n    return b**2 - 4 * a * c\n\ndef parabola_directrix(a: int, b: int, c: int) -> int:\n    # Calculate the discriminant using the helper function\n    discriminant = calculate_discriminant(a, b, c)\n    # Calculate the directrix using the derived formula\n    directrix = -(discriminant) // (4 * a) - (1 // (4 * a))\n    # Return the directrix value\n    return directrix\n",
    "full_code": "\ndef calculate_discriminant(a, b, c):\n    # Calculate the discriminant of the parabola\n    return b**2 - 4 * a * c\n\ndef parabola_directrix(a: int, b: int, c: int) -> int:\n    # Calculate the discriminant using the helper function\n    discriminant = calculate_discriminant(a, b, c)\n    # Calculate the directrix using the derived formula\n    directrix = -(discriminant) // (4 * a) - (1 // (4 * a))\n    # Return the directrix value\n    return directrix\n",
    "reward": false,
    "program_code": "\ndef calculate_discriminant(a, b, c):\n    # Calculate the discriminant of the parabola\n    return b**2 - 4 * a * c\n\ndef parabola_directrix(a: int, b: int, c: int) -> int:\n    # Calculate the discriminant using the helper function\n    discriminant = calculate_discriminant(a, b, c)\n    # Calculate the directrix using the derived formula\n    directrix = -(discriminant) // (4 * a) - (1 // (4 * a))\n    # Return the directrix value\n    return directrix\n",
    "program_name": "parabola_directrix",
    "dependencies": [],
    "raw_msg": "1. **Restate the problem in plain English**: \n   We need to create a function that calculates the directrix of a parabola given its coefficients. The coefficients are related to the standard form of a parabola, and we need to derive the directrix from these values.\n\n2. **Conceptualize a solution first in plain English**: \n   The directrix of a parabola can be found using the formula derived from the standard form of a parabola. For a parabola defined by the equation \\(y = ax^2 + bx + c\\), the directrix can be calculated using the formula:\n   \\[\n   \\text{Directrix} = \\frac{-(b^2 - 4ac)}{4a} - \\frac{1}{4a}\n   \\]\n   Here, \\(a\\), \\(b\\), and \\(c\\) are the coefficients of the parabola. We will implement this formula in our function.\n\n3. **Write a pseudocode solution**:\n   ```\n   Function parabola_directrix(a, b, c):\n       Calculate the discriminant as (b^2 - 4 * a * c)\n       Calculate the directrix using the formula: \n           directrix = -(discriminant) / (4 * a) - (1 / (4 * a))\n       Return the directrix\n   ```\n\n4. **Output the final Python 3 solution with your solution steps in comments**:\n```python\ndef calculate_discriminant(a, b, c):\n    # Calculate the discriminant of the parabola\n    return b**2 - 4 * a * c\n\ndef parabola_directrix(a: int, b: int, c: int) -> int:\n    # Calculate the discriminant using the helper function\n    discriminant = calculate_discriminant(a, b, c)\n    # Calculate the directrix using the derived formula\n    directrix = -(discriminant) // (4 * a) - (1 // (4 * a))\n    # Return the directrix value\n    return directrix\n```",
    "no_parent": true,
    "dependency_used": false
}