{
    "env_feedback": "Note: Tests are automatically generated and can be wrong.\n\nTests passed:\nNone\n\nTests failed:\nassert math.isclose(angle_complex(0,1j), 1.5707963267948966, rel_tol=0.001) # output: must be real number, not complex",
    "code": "\nimport math\n\n# Define a function to calculate the angle of a complex number\ndef angle_complex(real: float, imag: float) -> float:\n    # Use the atan2 function to calculate the angle in radians\n    return math.atan2(imag, real)\n",
    "full_code": "\nimport math\n\n# Define a function to calculate the angle of a complex number\ndef angle_complex(real: float, imag: float) -> float:\n    # Use the atan2 function to calculate the angle in radians\n    return math.atan2(imag, real)\n",
    "reward": false,
    "program_code": "\nimport math\n\n# Define a function to calculate the angle of a complex number\ndef angle_complex(real: float, imag: float) -> float:\n    # Use the atan2 function to calculate the angle in radians\n    return math.atan2(imag, real)\n",
    "program_name": "angle_complex",
    "dependencies": [],
    "raw_msg": "```python\nimport math\n\n# Define a function to calculate the angle of a complex number\ndef angle_complex(real: float, imag: float) -> float:\n    # Use the atan2 function to calculate the angle in radians\n    return math.atan2(imag, real)\n```",
    "no_parent": true,
    "dependency_used": false
}