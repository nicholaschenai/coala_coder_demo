{
    "env_feedback": "Note: Tests are automatically generated and can be wrong.\n\nTests passed:\nassert move_num('I1love143you55three3000thousand') == 'Iloveyouthreethousand1143553000'\n\nTests failed:\nNone",
    "code": "\ndef move_num(input_string: str) -> str:\n    # Create empty lists to hold non-numeric and numeric characters\n    non_numeric = []\n    numeric = []\n    \n    # Iterate through each character in the input string\n    for char in input_string:\n        # Check if the character is a digit\n        if char.isdigit():\n            # If it is a digit, add it to the numeric list\n            numeric.append(char)\n        else:\n            # If it is not a digit, add it to the non-numeric list\n            non_numeric.append(char)\n    \n    # Concatenate non-numeric characters with numeric characters\n    return ''.join(non_numeric) + ''.join(numeric)\n",
    "full_code": "\ndef move_num(input_string: str) -> str:\n    # Create empty lists to hold non-numeric and numeric characters\n    non_numeric = []\n    numeric = []\n    \n    # Iterate through each character in the input string\n    for char in input_string:\n        # Check if the character is a digit\n        if char.isdigit():\n            # If it is a digit, add it to the numeric list\n            numeric.append(char)\n        else:\n            # If it is not a digit, add it to the non-numeric list\n            non_numeric.append(char)\n    \n    # Concatenate non-numeric characters with numeric characters\n    return ''.join(non_numeric) + ''.join(numeric)\n",
    "reward": true,
    "program_code": "\ndef move_num(input_string: str) -> str:\n    # Create empty lists to hold non-numeric and numeric characters\n    non_numeric = []\n    numeric = []\n    \n    # Iterate through each character in the input string\n    for char in input_string:\n        # Check if the character is a digit\n        if char.isdigit():\n            # If it is a digit, add it to the numeric list\n            numeric.append(char)\n        else:\n            # If it is not a digit, add it to the non-numeric list\n            non_numeric.append(char)\n    \n    # Concatenate non-numeric characters with numeric characters\n    return ''.join(non_numeric) + ''.join(numeric)\n",
    "program_name": "move_num",
    "dependencies": [],
    "raw_msg": "1. **Restate the problem in plain English**: \n   We need to create a function that takes a string as input and rearranges it so that all the numeric characters (0-9) are moved to the end of the string, while keeping the order of the non-numeric characters and the numeric characters themselves intact.\n\n2. **Conceptualize a solution first in plain English**: \n   To solve this problem, we can iterate through each character in the input string. We will maintain two separate lists: one for non-numeric characters and another for numeric characters. As we go through the string, we will check if each character is a digit or not. If it is a digit, we will add it to the numeric list; if it is not, we will add it to the non-numeric list. Finally, we will concatenate the non-numeric list with the numeric list to form the final string.\n\n3. **Write a pseudocode solution**:\n   ```\n   function move_num(input_string):\n       create an empty list for non_numeric\n       create an empty list for numeric\n       for each character in input_string:\n           if character is a digit:\n               add character to numeric list\n           else:\n               add character to non_numeric list\n       concatenate non_numeric list with numeric list\n       return the concatenated string\n   ```\n\n4. **Output the final Python 3 solution with your solution steps in comments**:\n```python\ndef move_num(input_string: str) -> str:\n    # Create empty lists to hold non-numeric and numeric characters\n    non_numeric = []\n    numeric = []\n    \n    # Iterate through each character in the input string\n    for char in input_string:\n        # Check if the character is a digit\n        if char.isdigit():\n            # If it is a digit, add it to the numeric list\n            numeric.append(char)\n        else:\n            # If it is not a digit, add it to the non-numeric list\n            non_numeric.append(char)\n    \n    # Concatenate non-numeric characters with numeric characters\n    return ''.join(non_numeric) + ''.join(numeric)\n```",
    "no_parent": true,
    "dependency_used": false
}