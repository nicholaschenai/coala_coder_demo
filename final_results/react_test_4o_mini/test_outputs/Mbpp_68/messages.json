[
    {
        "role": "system",
        "content": "\nYou are an expert programmer tasked with solving the problem below.\n\nFollow the user's instructions to solve the problem.\nThe user can ask for analysis, code, or both.\n\n## Instructions\nWhen asked to output code,\n- Make sure to wrap your code in '```python' and '```' Markdown delimiters, \n- include exactly one block of code with the entire solution\n- No outside libraries are allowed. \n- Builtins are allowed.\n- If the task specifies a function name to be used, follow it strictly (be case sensitive!) and declare the that function last (helper functions are declared first).\n- DO NOT write any assert statements / tests.\n\n## Problem\n[BEGIN PROBLEM]\nWrite a Python function that satisfies the description below. Your code must strictly follow the function name and typings of the input and output specified in the assert statement below, and pass the assertion when executed.\n\"\"\"\nWrite a python function to check whether the given array is monotonic or not.\nassert is_Monotonic([6, 5, 4, 4]) == True\n\"\"\"\n\n[END PROBLEM]\n"
    },
    {
        "role": "user",
        "content": "\n## Instructions\n\nReason through the problem and:\n1. Restate the problem in plain English\n2. Conceptualize a solution first in plain English\n3. Write a pseudocode solution\n4. Output the final Python 3 solution with your solution steps in comments.\n\nMake sure to wrap your code in '```python' and '```' Markdown delimiters, \nand include exactly one block of code with the entire solution.\n\nNo outside libraries are allowed.\nBuiltins are allowed.\n"
    },
    {
        "role": "assistant",
        "content": "1. **Restate the problem in plain English:**\n   We need to create a function that checks if a given list of numbers is monotonic. A list is considered monotonic if it is either entirely non-increasing (each number is less than or equal to the previous one) or entirely non-decreasing (each number is greater than or equal to the previous one).\n\n2. **Conceptualize a solution first in plain English:**\n   To determine if the list is monotonic, we can iterate through the list and check the relationship between each pair of adjacent elements. We will keep track of whether we have seen an increase or a decrease. If we see both an increase and a decrease, we can conclude that the list is not monotonic. If we only see one type of relationship (either all increases or all decreases), then the list is monotonic.\n\n3. **Write a pseudocode solution:**\n   ```\n   function is_Monotonic(array):\n       if the array is empty or has one element:\n           return True\n       \n       initialize a variable to track if we have seen an increase\n       initialize a variable to track if we have seen a decrease\n       \n       for each index from 1 to the length of the array - 1:\n           if the current element is greater than the previous element:\n               set the increase variable to True\n           else if the current element is less than the previous element:\n               set the decrease variable to True\n           \n           if both increase and decrease are True:\n               return False\n       \n       return True\n   ```\n\n4. **Output the final Python 3 solution with your solution steps in comments:**\n```python\ndef is_Monotonic(array):\n    # Check if the array is empty or has one element\n    if len(array) <= 1:\n        return True\n    \n    # Initialize flags to track if we have seen an increase or decrease\n    increasing = False\n    decreasing = False\n    \n    # Iterate through the array starting from the second element\n    for i in range(1, len(array)):\n        # Check if the current element is greater than the previous one\n        if array[i] > array[i - 1]:\n            increasing = True\n        # Check if the current element is less than the previous one\n        elif array[i] < array[i - 1]:\n            decreasing = True\n        \n        # If we have seen both an increase and a decrease, return False\n        if increasing and decreasing:\n            return False\n    \n    # If we only saw increases or only saw decreases, return True\n    return True\n```"
    },
    {
        "role": "user",
        "content": "\n[Environment Feedback]:\n    Note: Tests are automatically generated and can be wrong.\n\n    Tests passed:\n    assert is_Monotonic([6, 5, 4, 4]) == True\n\n    Tests failed:\n    None\n[/Environment Feedback]\n"
    }
]