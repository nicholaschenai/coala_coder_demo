{
    "env_feedback": "Note: Tests are automatically generated and can be wrong.\n\nTests passed:\nassert hexagonal_num(10) == 190\n\nTests failed:\nNone",
    "code": "\n# Define a function to calculate the nth hexagonal number\ndef hexagonal_num(n):\n    # The formula for the nth hexagonal number is n * (2n - 1)\n    return n * (2 * n - 1)\n",
    "full_code": "\n# Define a function to calculate the nth hexagonal number\ndef hexagonal_num(n):\n    # The formula for the nth hexagonal number is n * (2n - 1)\n    return n * (2 * n - 1)\n",
    "reward": true,
    "program_code": "\n# Define a function to calculate the nth hexagonal number\ndef hexagonal_num(n):\n    # The formula for the nth hexagonal number is n * (2n - 1)\n    return n * (2 * n - 1)\n",
    "program_name": "hexagonal_num",
    "dependencies": [],
    "raw_msg": "1. **Restate the problem in plain English**: \n   We need to create a function that calculates the nth hexagonal number. A hexagonal number is a figurate number that represents a hexagon. The nth hexagonal number can be calculated using a specific formula.\n\n2. **Conceptualize a solution first in plain English**: \n   The formula for the nth hexagonal number is given by the equation: \n   \\[\n   H(n) = n(2n - 1)\n   \\]\n   This means that to find the nth hexagonal number, we will multiply n by (2n - 1). We will implement this formula in a function that takes an integer n as input and returns the corresponding hexagonal number.\n\n3. **Write a pseudocode solution**:\n   ```\n   FUNCTION hexagonal_num(n):\n       RETURN n * (2 * n - 1)\n   ```\n\n4. **Output the final Python 3 solution with your solution steps in comments**:\n```python\n# Define a function to calculate the nth hexagonal number\ndef hexagonal_num(n):\n    # The formula for the nth hexagonal number is n * (2n - 1)\n    return n * (2 * n - 1)\n```",
    "no_parent": true,
    "dependency_used": false
}